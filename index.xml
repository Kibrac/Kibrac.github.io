<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My awesome website</title>
    <link>https://kibrac.github.io/</link>
    <description>Recent content on My awesome website</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Sep 2024 17:25:38 +0800</lastBuildDate>
    <atom:link href="https://kibrac.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Excel 中接入大语言模型进行批量翻译</title>
      <link>https://kibrac.github.io/posts/llm-in-excel/</link>
      <pubDate>Wed, 11 Sep 2024 17:25:38 +0800</pubDate>
      <guid>https://kibrac.github.io/posts/llm-in-excel/</guid>
      <description>&lt;h2 id=&#34;一思路&#34;&gt;一、思路&lt;/h2&gt;&#xA;&lt;p&gt;将大语言模型通过编写宏封装为函数，进而对 Excel 表格中的内容进行批量翻译。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二工具准备&#34;&gt;二、工具准备&lt;/h2&gt;&#xA;&lt;p&gt;演示使用的软件是 Microsoft Office Home and Student 2019 中的 Excel，另外还需要一个可用的大语言模型的 API key，此处以智谱 AI 的 GLM-4 为例。关于 API key 的获取有很多参考教程这里不进行赘述。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三代码编写&#34;&gt;三、代码编写&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打开 Excel 中的 VBA 编辑器。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们可以通过以下方式找到 VBA 编辑器。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;按下快捷键 Alt+F11 直接打开&lt;/li&gt;&#xA;&lt;li&gt;从菜单栏中的“开发工具”中选择 &lt;code&gt;Visual Basic&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果你的菜单中没有“开发工具”选项，可以通过“文件”&amp;gt;“选项”&amp;gt;“自定义功能区”中勾选“开发工具”来添加它&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;插入新模块&#xA;在编辑器菜单中选择 &lt;code&gt;插入&lt;/code&gt; - &lt;code&gt;模块&lt;/code&gt;，添加一个新的模块。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;编写 VBA 代码。&#xA;以下代码是根据&lt;a href=&#34;https://mp.weixin.qq.com/s/kilElUpJfFaS4Oi3qhkWcw&#34;&gt;参考教程&lt;/a&gt;中的代码以及智谱 AI 提供的&lt;a href=&#34;https://open.bigmodel.cn/dev/api#glm-4&#34;&gt;接口文档&lt;/a&gt;进行改写得到。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;zhipu&lt;/span&gt;(prompt &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 声明变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dim&lt;/span&gt; url &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, apiKey &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dim&lt;/span&gt; response &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Object&lt;/span&gt;, json &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, data &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dim&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; Worksheet&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 设置指向第一个工作表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Set&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ThisWorkbook.Sheets(1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 从工作表的B1单元格获取API密钥&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ws.Range(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B1&amp;#34;&lt;/span&gt;).Value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 检查API密钥是否为空&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;If&lt;/span&gt; apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        MsgBox &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请在Sheet1的B1单元格中填写apiKey&amp;#34;&lt;/span&gt;, vbExclamation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        zhipu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: API key is missing&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;Exit&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Function&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;If&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 设置请求URL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://open.bigmodel.cn/api/paas/v4/chat/completions&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 替换特殊字符，并构建要发送的JSON数据&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dim&lt;/span&gt; cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Replace(prompt, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 转义双引号&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Replace(cleanPrompt, vbCrLf, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 替换Excel中的换行符为JSON中的\n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Replace(cleanPrompt, Chr(13), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 替换回车符&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Replace(cleanPrompt, Chr(10), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 替换换行符&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&amp;#34;&amp;#34;model&amp;#34;&amp;#34;:&amp;#34;&amp;#34;glm-4&amp;#34;&amp;#34;,&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; _&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;messages&amp;#34;&amp;#34;:[{&amp;#34;&amp;#34;role&amp;#34;&amp;#34;:&amp;#34;&amp;#34;user&amp;#34;&amp;#34;,&amp;#34;&amp;#34;content&amp;#34;&amp;#34;:&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; cleanPrompt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;}],&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; _&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;temperature&amp;#34;&amp;#34;:0.5}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 初始化HTTP请求对象，并设置请求方法、URL和同步标志&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Set&lt;/span&gt; response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CreateObject(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSXML2.ServerXMLHTTP&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response.Open &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;, url, &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 设置请求头&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response.setRequestHeader &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response.setRequestHeader &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bearer &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; apiKey&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 发送请求和数据&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response.Send data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 获取响应文本&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    json &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response.responseText&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 解析JSON响应&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dim&lt;/span&gt; jsonObject &lt;span style=&#34;color:#f92672&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Set&lt;/span&gt; jsonObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JsonConverter.ParseJson(json)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#39; 从解析的JSON中提取所需内容并返回&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;On&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Resume&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Next&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zhipu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jsonObject(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;choices&amp;#34;&lt;/span&gt;)(1)(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;)(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;If&lt;/span&gt; Err.Number &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; 0 &lt;span style=&#34;color:#66d9ef&#34;&gt;Then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        zhipu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error parsing response: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;If&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;On&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GoTo&lt;/span&gt; 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Function&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;导入 Json 解析依赖&#xA;下载用于 JSON 解析的依赖。&lt;a href=&#34;https://github.com/VBA-tools/VBA-JSON/blob/master/JsonConverter.bas&#34;&gt;下载地址&lt;/a&gt;&#xA;在编辑器菜单中选择 &lt;code&gt;文件&lt;/code&gt; - &lt;code&gt;导入文件&lt;/code&gt; 将下载得到的文件导入到项目中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>批量提取 PDF 文件中的指定信息并存储在 Excel 表格中</title>
      <link>https://kibrac.github.io/posts/pdf-batch-extration/</link>
      <pubDate>Wed, 11 Sep 2024 17:25:24 +0800</pubDate>
      <guid>https://kibrac.github.io/posts/pdf-batch-extration/</guid>
      <description>&lt;h2 id=&#34;一问题描述&#34;&gt;一、问题描述&lt;/h2&gt;&#xA;&lt;p&gt;在一批药品说明书中提取指定信息。PDF 文件的命名格式为：药品名称[数字编码]，说明书的内容结构示例如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;【药品名称】&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xxxxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;【适应症】&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xxxxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;【用法用量】&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xxxxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;需要提取的信息为【药品名称】以及【适应症】的相关内容。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二遇到的障碍&#34;&gt;二、遇到的障碍&lt;/h2&gt;&#xA;&lt;p&gt;首先决定使用 Python 编写程序。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;事实上正常的思路应该是使用有关 PDF 编辑的 Python 库，但是不知道出于什么原因，我无法正常读取目标 PDF 文件，花费了一段时间仍然解决不了，所以决定先将 PDF 文件转换为 Word 文件进行处理。&lt;em&gt;&lt;strong&gt;文章末尾会附上 PDF 批量转换为 Word 或其它格式的方法。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最初的思路是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新建一个 Excel 表格，以 &lt;code&gt;【药品】&lt;/code&gt;、&lt;code&gt;【编码】&lt;/code&gt;、&lt;code&gt;【药品名称】&lt;/code&gt;、&lt;code&gt;【适应症】&lt;/code&gt; 为列标题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;【药品】&lt;/code&gt; 和 &lt;code&gt;【编码】&lt;/code&gt; 利用 &lt;code&gt;[]&lt;/code&gt; 作为读取断点然后分别写入即可。&lt;/li&gt;&#xA;&lt;li&gt;读取 Word 文件中的内容，当遇到 &lt;code&gt;【药物名称】&lt;/code&gt; 时，将其之后的内容全部提取出来写入 Excel 表格中 &lt;code&gt;【药品名称】&lt;/code&gt; 这一列中，直到遇到 &lt;code&gt;【适应症】&lt;/code&gt; 为止。&lt;/li&gt;&#xA;&lt;li&gt;同理提取 &lt;code&gt;【适应症】&lt;/code&gt; 的内容。&lt;/li&gt;&#xA;&lt;li&gt;遍历文件夹中所有 PDF 文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;但是事情远没有这么简单。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;转换得到的 Word 文件中，有一些本应作为标题的 &lt;code&gt;【药品名称】&lt;/code&gt; 却位于页眉中，导致常规的读取代码无法读取到这部分内容，在尝试将页眉内容合并到正文中再进行处理但是无果的情况下，决定采取一种曲线救国的方法：&lt;/p&gt;&#xA;&lt;p&gt;利用下一板块的内容【适应症】来反向定位【药物名称】所在的位置，也就是将【适应症】之前的内容全部视为药物名称，然后为了防止把本就位于正文的【药物名称】这个标题也写入到单元格内，再手动在代码中把这个标题的内容删掉。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三代码编写&#34;&gt;三、代码编写&lt;/h2&gt;&#xA;&lt;p&gt;综上，借助 ChatGPT 的帮助，得到了以下代码：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>https://kibrac.github.io/posts/test/</link>
      <pubDate>Mon, 09 Sep 2024 17:28:19 +0800</pubDate>
      <guid>https://kibrac.github.io/posts/test/</guid>
      <description>&lt;h2 id=&#34;11-深度学习介绍&#34;&gt;1.1 深度学习介绍&lt;/h2&gt;&#xA;&lt;h3 id=&#34;111-区别&#34;&gt;1.1.1 区别&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;深度学习和机器学习的区别&lt;/strong&gt;：深度学习并不需要过多的特征处理。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1111-特征提取方面&#34;&gt;1.1.1.1 特征提取方面&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;机器学习的特征工程步骤是要靠手动完成的，而且需要大量领域专业知识&lt;/li&gt;&#xA;&lt;li&gt;深度学习通常由多个层构成，它们通常将更简单的模型组合在一起，通过将数据从一层传递到另一层来构建更复杂的模型。通过大量数据的训练自动得到模型，不需要人工设计特征提取环节。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;深度学习算法试图从数据中学习高级功能，这是深度学习的一个非常独特的功能。因此，减少了为了每个问题开发新特征提取器的任务。**适合用在难提取特征的图像、语音、自然语言领域。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;112-深度学习的应用场景&#34;&gt;1.1.2 深度学习的应用场景&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;图像识别&lt;/li&gt;&#xA;&lt;li&gt;自然语言处理&lt;/li&gt;&#xA;&lt;li&gt;语音技术&lt;/li&gt;&#xA;&lt;li&gt;机器学习效果不行的这些场景，特征需要复杂处理的地方&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;113-深度学习代表算法---神经网络&#34;&gt;1.1.3 深度学习代表算法 - 神经网络&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1131-神经网络&#34;&gt;1.1.3.1 神经网络&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;人工神经网络（Artificial Neural Network，简写为 ANN），也简称为神经网络（NN）&lt;/strong&gt;，是一种模仿生物神经网络（动物的中枢神经系统，特别是大脑）结构和功能的&lt;strong&gt;计算模型&lt;/strong&gt;。经典的神经网络结构包含三个层次的神经网络，分别是&lt;strong&gt;输入层、隐藏层和输出层&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;图中每层的圆圈代表一个神经元，隐藏层和输出层的神经元有输入的数据计算后输出，输出层的神经元只是输入。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;神经网络的特点&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个连接都有权值，同一层神经元之间没有连接&lt;/li&gt;&#xA;&lt;li&gt;神经元当中会包含有&lt;strong&gt;激活函数&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;最后的输出结果对应的层也称之为&lt;strong&gt;全连接层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;114-为什么深度学习现在效果非常好&#34;&gt;1.1.4 为什么深度学习现在效果非常好&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据&lt;/li&gt;&#xA;&lt;li&gt;计算&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPU、TPU&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一些创新，如 [[ReLU 激活函数]]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;12-神经网络基础&#34;&gt;1.2 神经网络基础&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-logistic-回归&#34;&gt;1.2.1 Logistic 回归&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1211-logistic-回归&#34;&gt;1.2.1.1 Logistic 回归&lt;/h4&gt;&#xA;&lt;p&gt;逻辑回归是一个主要用于二分分类的算法，那么逻辑回归是给定一个 $x$，输出一个该样本属于 $1$ 对应类别的预测概率 $\hat{y}=P(y=1|x)$。&lt;/p&gt;&#xA;&lt;p&gt;Logistic 回归中使用的参数如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入的特征向量&lt;/strong&gt;： $x\in R^{n_{x}}$ , $x$ 是一个 $n_{x}$ 维的特征数量，用于训练的标签： $y\in0,1$&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;参数&lt;/strong&gt;：权重： $w\in R^{n_{x}}$ ，偏置： $b\in R$&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出预测结果&lt;/strong&gt;： $\hat{y}=\sigma(w^Tx+b)=\sigma(w_{1}x_{1}+w_{2}x_{2}+\cdots+b)=\sigma(\theta^Tx)$&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sigmoid 函数： $s=\sigma(w^Tx+b)=\sigma(z)=\frac{1}{1+e^{-z}}$&lt;/li&gt;&#xA;&lt;li&gt;如果 $z$ 的结果非常大，那么 $s$ 的结果接近于 $1$&lt;/li&gt;&#xA;&lt;li&gt;如果 $z$ 的结果非常小，那么 $s$ 的结果接近于 $0$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;二分分类（Binary Classification）是一种常见的机器学习任务，主要用于将数据分为两个类别。在这种任务中，模型的目标是预测一个实例属于两个类别中的哪一个。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
